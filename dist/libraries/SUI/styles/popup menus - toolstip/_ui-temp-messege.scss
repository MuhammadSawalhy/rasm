
// here is for the pop-up value messege - or - trans-details-template

$suitm-radius: 5px;
$headerHeight: 30px;
.sui-temp-messege{
   border-radius: $suitm-radius;
   background: silver;
   box-shadow: 3px 2px 5px 2px rgba(0, 0, 0, 0.178);
   border: 1px solid rgb(128, 128, 128);

   min-width: 70px;
   max-width: 350px;

   position: absolute;

   z-index: 2000;

   display: grid;
   grid-template: 
      'header' auto
      'content' auto
      / auto;


   .header{
      grid-area: header;
   
      background: rgba(128, 128, 128, 0.521);
      box-shadow: 0px 0px 3px 2px rgba(49, 68, 80, 0.26);
      border-bottom: 1px solid rgba(0, 0, 0, 0.425);
      overflow: hidden;
      border-radius: $suitm-radius;

      height: $headerHeight;
      width: 100%;

   }
   .tools{
      flex-basis: stretch;

      display: flex;
      flex-flow: row nowrap;
      justify-content: flex-end;

      height: 100%;
      width: 100%;

      div{
         width: $headerHeight;
         height: $headerHeight;
         // for centration, you can do it with many other methods
         display: flex;
         align-items: center;
         justify-content: center;

         button{
            border-radius: 0;
            transition: background 0.2s ease-in-out, color 0.2s;
            &:hover{
               color: rgba(0, 42, 182, 0.658);
            }
         }


      } 
   }
   .close{
      .closebtn-1{
         width: 100%;
         height: 100%;
         padding: 0; 
         &:hover{
            background: rgba(255, 159, 175, 0.548);
         }
         &:hover .inner::before, &:hover .inner::after{
            background: black;
         }
      }
   }
   .drag{
      cursor: move;
      .drag-inner{
         width: 100%;
         height: 100%;

         $size: 3px;

         &:hover{
            span{
               background: black;
            }
         }

         span{
            height: $size;
            width: $size;
            border-radius: $size/2;
            position: absolute;
            background: rgba(0, 0, 0, 0.452);
            transition: background 0.2s ease-n-out;
         }

         $gap-x: 2px;
         $gap-y: 4px;
         span:nth-of-type(1){
            transform: translate(-($size/2 + $gap-x), 0) ;
         }
         span:nth-of-type(2){
            transform: translate(+($size/2 + $gap-x), 0) ;
         }
         span:nth-of-type(3){
            transform: translate(+($size/2 + $gap-x), -($size/2 + $gap-y)) ;
         }
         span:nth-of-type(4){
            transform: translate(+($size/2 + $gap-x), +($size/2 + $gap-y)) ;
         }
         span:nth-of-type(5){
            transform: translate(-($size/2 + $gap-x), -($size/2 + $gap-y)) ;
         }
         span:nth-of-type(6){
            transform: translate(-($size/2 + $gap-x), +($size/2 + $gap-y)) ;
         }
      }
   }
   .fix{

      position: relative;

      .fix-btn{
         width: 100%;
         height: 100%;
         color: rgba(0, 0, 0, 0.562);
      }
      
      .fix-btn::before{
         content: '';
         position: absolute;
         bottom: 0;
         right: 0;

         width: 100%;
         height: 3px;

         background: royalblue;

         transition: transform 0.15s ease-in-out;
         transform-origin: center;
         transform: scaleX(0);
      }
   }

   .value-wrapper{
      grid-area: value;

      padding: 5px;

      width: 100%;

      color: rgb(20, 20, 20);
      font: 15px "consolas", monospace;
      display: flex;
      flex-flow: column nowrap;

      p{
         margin: 3px 5px 3px 5px;
      }
   }

   &.fixed{
      .fix .fix-btn::before{
         transform: scaleX(1);
      }
   }
}